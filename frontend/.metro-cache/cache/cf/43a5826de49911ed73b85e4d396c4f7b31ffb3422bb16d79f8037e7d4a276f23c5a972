{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":63,"index":63}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ImagePicker.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":64},"end":{"line":2,"column":50,"index":114}}],"key":"/jNv85Cqy9zQGnbpL3adxFcCtH4=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":115},"end":{"line":3,"column":42,"index":157}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _ImagePicker = require(_dependencyMap[1], \"./ImagePicker.types\");\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  const MediaTypeInput = {\n    images: 'image/*',\n    videos: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n    livePhotos: ''\n  };\n  var _default = exports.default = {\n    async launchImageLibraryAsync({\n      mediaTypes = ['images'],\n      allowsMultipleSelection = false,\n      base64 = false\n    }) {\n      // SSR guard\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return await openFileBrowserAsync({\n        mediaTypes,\n        allowsMultipleSelection,\n        base64\n      });\n    },\n    async launchCameraAsync({\n      mediaTypes = ['images'],\n      allowsMultipleSelection = false,\n      base64 = false,\n      cameraType\n    }) {\n      // SSR guard\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return await openFileBrowserAsync({\n        mediaTypes,\n        allowsMultipleSelection,\n        capture: cameraType ?? true,\n        base64\n      });\n    },\n    /*\n     * Delegate to expo-permissions to request camera permissions\n     */\n    async getCameraPermissionsAsync() {\n      return permissionGrantedResponse();\n    },\n    async requestCameraPermissionsAsync() {\n      return permissionGrantedResponse();\n    },\n    /*\n     * Camera roll permissions don't need to be requested on web, so we always\n     * respond with granted.\n     */\n    async getMediaLibraryPermissionsAsync(_writeOnly) {\n      return permissionGrantedResponse();\n    },\n    async requestMediaLibraryPermissionsAsync(_writeOnly) {\n      return permissionGrantedResponse();\n    }\n  };\n  function permissionGrantedResponse() {\n    return {\n      status: _expoModulesCore.PermissionStatus.GRANTED,\n      expires: 'never',\n      granted: true,\n      canAskAgain: true\n    };\n  }\n  /**\n   * Opens a file browser dialog or camera on supported platforms and returns the selected files.\n   * Handles both single and multiple file selection.\n   */\n  function openFileBrowserAsync({\n    mediaTypes,\n    capture = false,\n    allowsMultipleSelection = false,\n    base64\n  }) {\n    const parsedMediaTypes = (0, _utils.parseMediaTypes)(mediaTypes);\n    const mediaTypeFormat = createMediaTypeFormat(parsedMediaTypes);\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', mediaTypeFormat);\n    input.setAttribute('id', String(Math.random()));\n    input.setAttribute('data-testid', 'file-input');\n    if (allowsMultipleSelection) {\n      input.setAttribute('multiple', 'multiple');\n    }\n    if (capture) {\n      switch (capture) {\n        case true:\n          input.setAttribute('capture', 'camera');\n          break;\n        case _ImagePicker.CameraType.front:\n          input.setAttribute('capture', 'user');\n          break;\n        case _ImagePicker.CameraType.back:\n          input.setAttribute('capture', 'environment');\n      }\n    }\n    document.body.appendChild(input);\n    return new Promise(resolve => {\n      input.addEventListener('change', async () => {\n        if (input.files?.length) {\n          const files = allowsMultipleSelection ? input.files : [input.files[0]];\n          const assets = await Promise.all(Array.from(files).map(file => readFile(file, {\n            base64\n          })));\n          resolve({\n            canceled: false,\n            assets\n          });\n        } else {\n          resolve({\n            canceled: true,\n            assets: null\n          });\n        }\n        document.body.removeChild(input);\n      });\n      input.addEventListener('cancel', () => {\n        input.dispatchEvent(new Event('change'));\n      });\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  }\n  /**\n   * Gets metadata for an image file using a blob URL\n   * TODO (Hirbod): add exif support for feature parity with native\n   */\n  async function getImageMetadata(blobUrl) {\n    return new Promise(resolve => {\n      const image = new Image();\n      image.onload = () => {\n        resolve({\n          width: image.naturalWidth ?? image.width,\n          height: image.naturalHeight ?? image.height\n        });\n      };\n      image.onerror = () => resolve({\n        width: 0,\n        height: 0\n      });\n      image.src = blobUrl;\n    });\n  }\n  /**\n   * Gets metadata for a video file using a blob URL\n   */\n  async function getVideoMetadata(blobUrl) {\n    return new Promise(resolve => {\n      const video = document.createElement('video');\n      video.preload = 'metadata';\n      video.onloadedmetadata = () => {\n        resolve({\n          width: video.videoWidth,\n          height: video.videoHeight,\n          duration: video.duration\n        });\n      };\n      video.onerror = () => resolve({\n        width: 0,\n        height: 0,\n        duration: 0\n      });\n      video.src = blobUrl;\n    });\n  }\n  /**\n   * Reads a file as base64\n   */\n  async function readFileAsBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onerror = () => {\n        reject(new Error('Failed to read the selected media because the operation failed.'));\n      };\n      reader.onload = event => {\n        const result = event.target?.result;\n        if (typeof result !== 'string') {\n          reject(new Error('Failed to read file as base64'));\n          return;\n        }\n        // Remove the data URL prefix to get just the base64 data\n        resolve(result.split(',')[1]);\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n  /**\n   * Reads a file and returns its data as an ImagePickerAsset.\n   * Handles both base64 and blob URL modes, and extracts metadata for images and videos.\n   */\n  async function readFile(targetFile, options) {\n    const mimeType = targetFile.type;\n    const baseUri = URL.createObjectURL(targetFile);\n    try {\n      let metadata;\n      let base64;\n      if (mimeType.startsWith('image/')) {\n        metadata = await getImageMetadata(baseUri);\n      } else if (mimeType.startsWith('video/')) {\n        metadata = await getVideoMetadata(baseUri);\n      } else {\n        throw new Error(`Unsupported file type: ${mimeType}. Only images and videos are supported.`);\n      }\n      if (options.base64) {\n        base64 = await readFileAsBase64(targetFile);\n      }\n      return {\n        uri: baseUri,\n        width: metadata.width,\n        height: metadata.height,\n        type: mimeType.startsWith('image/') ? 'image' : 'video',\n        mimeType,\n        fileName: targetFile.name,\n        fileSize: targetFile.size,\n        file: targetFile,\n        ...(metadata.duration !== undefined && {\n          duration: metadata.duration\n        }),\n        ...(base64 && {\n          base64\n        })\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n  /**\n   * Creates the accept attribute value for the file input based on the requested media types.\n   * Filters out livePhotos as they're not supported on web.\n   */\n  function createMediaTypeFormat(mediaTypes) {\n    const filteredMediaTypes = mediaTypes.filter(mediaType => mediaType !== 'livePhotos');\n    if (filteredMediaTypes.length === 0) {\n      return 'image/*';\n    }\n    let result = '';\n    for (const mediaType of filteredMediaTypes) {\n      // Make sure the types don't repeat\n      if (!result.includes(MediaTypeInput[mediaType])) {\n        result = result.concat(',', MediaTypeInput[mediaType]);\n      }\n    }\n    return result;\n  }\n});","lineCount":262,"map":[[6,2,1,0],[6,6,1,0,"_expoModulesCore"],[6,22,1,0],[6,25,1,0,"require"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,2,0],[7,6,2,0,"_ImagePicker"],[7,18,2,0],[7,21,2,0,"require"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,3,0],[8,6,3,0,"_utils"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,0],[9,8,4,6,"MediaTypeInput"],[9,22,4,20],[9,25,4,23],[10,4,5,4,"images"],[10,10,5,10],[10,12,5,12],[10,21,5,21],[11,4,6,4,"videos"],[11,10,6,10],[11,12,6,12],[11,59,6,59],[12,4,7,4,"livePhotos"],[12,14,7,14],[12,16,7,16],[13,2,8,0],[13,3,8,1],[14,2,8,2],[14,6,8,2,"_default"],[14,14,8,2],[14,17,8,2,"exports"],[14,24,8,2],[14,25,8,2,"default"],[14,32,8,2],[14,35,9,15],[15,4,10,4],[15,10,10,10,"launchImageLibraryAsync"],[15,33,10,33,"launchImageLibraryAsync"],[15,34,10,34],[16,6,10,36,"mediaTypes"],[16,16,10,46],[16,19,10,49],[16,20,10,50],[16,28,10,58],[16,29,10,59],[17,6,10,61,"allowsMultipleSelection"],[17,29,10,84],[17,32,10,87],[17,37,10,92],[18,6,10,94,"base64"],[18,12,10,100],[18,15,10,103],[19,4,10,110],[19,5,10,111],[19,7,10,113],[20,6,11,8],[21,6,12,8],[21,10,12,12],[21,11,12,13,"Platform"],[21,36,12,21],[21,37,12,22,"isDOMAvailable"],[21,51,12,36],[21,53,12,38],[22,8,13,12],[22,15,13,19],[23,10,13,21,"canceled"],[23,18,13,29],[23,20,13,31],[23,24,13,35],[24,10,13,37,"assets"],[24,16,13,43],[24,18,13,45],[25,8,13,50],[25,9,13,51],[26,6,14,8],[27,6,15,8],[27,13,15,15],[27,19,15,21,"openFileBrowserAsync"],[27,39,15,41],[27,40,15,42],[28,8,16,12,"mediaTypes"],[28,18,16,22],[29,8,17,12,"allowsMultipleSelection"],[29,31,17,35],[30,8,18,12,"base64"],[31,6,19,8],[31,7,19,9],[31,8,19,10],[32,4,20,4],[32,5,20,5],[33,4,21,4],[33,10,21,10,"launchCameraAsync"],[33,27,21,27,"launchCameraAsync"],[33,28,21,28],[34,6,21,30,"mediaTypes"],[34,16,21,40],[34,19,21,43],[34,20,21,44],[34,28,21,52],[34,29,21,53],[35,6,21,55,"allowsMultipleSelection"],[35,29,21,78],[35,32,21,81],[35,37,21,86],[36,6,21,88,"base64"],[36,12,21,94],[36,15,21,97],[36,20,21,102],[37,6,21,104,"cameraType"],[38,4,21,116],[38,5,21,117],[38,7,21,119],[39,6,22,8],[40,6,23,8],[40,10,23,12],[40,11,23,13,"Platform"],[40,36,23,21],[40,37,23,22,"isDOMAvailable"],[40,51,23,36],[40,53,23,38],[41,8,24,12],[41,15,24,19],[42,10,24,21,"canceled"],[42,18,24,29],[42,20,24,31],[42,24,24,35],[43,10,24,37,"assets"],[43,16,24,43],[43,18,24,45],[44,8,24,50],[44,9,24,51],[45,6,25,8],[46,6,26,8],[46,13,26,15],[46,19,26,21,"openFileBrowserAsync"],[46,39,26,41],[46,40,26,42],[47,8,27,12,"mediaTypes"],[47,18,27,22],[48,8,28,12,"allowsMultipleSelection"],[48,31,28,35],[49,8,29,12,"capture"],[49,15,29,19],[49,17,29,21,"cameraType"],[49,27,29,31],[49,31,29,35],[49,35,29,39],[50,8,30,12,"base64"],[51,6,31,8],[51,7,31,9],[51,8,31,10],[52,4,32,4],[52,5,32,5],[53,4,33,4],[54,0,34,0],[55,0,35,0],[56,4,36,4],[56,10,36,10,"getCameraPermissionsAsync"],[56,35,36,35,"getCameraPermissionsAsync"],[56,36,36,35],[56,38,36,38],[57,6,37,8],[57,13,37,15,"permissionGrantedResponse"],[57,38,37,40],[57,39,37,41],[57,40,37,42],[58,4,38,4],[58,5,38,5],[59,4,39,4],[59,10,39,10,"requestCameraPermissionsAsync"],[59,39,39,39,"requestCameraPermissionsAsync"],[59,40,39,39],[59,42,39,42],[60,6,40,8],[60,13,40,15,"permissionGrantedResponse"],[60,38,40,40],[60,39,40,41],[60,40,40,42],[61,4,41,4],[61,5,41,5],[62,4,42,4],[63,0,43,0],[64,0,44,0],[65,0,45,0],[66,4,46,4],[66,10,46,10,"getMediaLibraryPermissionsAsync"],[66,41,46,41,"getMediaLibraryPermissionsAsync"],[66,42,46,42,"_writeOnly"],[66,52,46,52],[66,54,46,54],[67,6,47,8],[67,13,47,15,"permissionGrantedResponse"],[67,38,47,40],[67,39,47,41],[67,40,47,42],[68,4,48,4],[68,5,48,5],[69,4,49,4],[69,10,49,10,"requestMediaLibraryPermissionsAsync"],[69,45,49,45,"requestMediaLibraryPermissionsAsync"],[69,46,49,46,"_writeOnly"],[69,56,49,56],[69,58,49,58],[70,6,50,8],[70,13,50,15,"permissionGrantedResponse"],[70,38,50,40],[70,39,50,41],[70,40,50,42],[71,4,51,4],[72,2,52,0],[72,3,52,1],[73,2,53,0],[73,11,53,9,"permissionGrantedResponse"],[73,36,53,34,"permissionGrantedResponse"],[73,37,53,34],[73,39,53,37],[74,4,54,4],[74,11,54,11],[75,6,55,8,"status"],[75,12,55,14],[75,14,55,16,"PermissionStatus"],[75,47,55,32],[75,48,55,33,"GRANTED"],[75,55,55,40],[76,6,56,8,"expires"],[76,13,56,15],[76,15,56,17],[76,22,56,24],[77,6,57,8,"granted"],[77,13,57,15],[77,15,57,17],[77,19,57,21],[78,6,58,8,"canAskAgain"],[78,17,58,19],[78,19,58,21],[79,4,59,4],[79,5,59,5],[80,2,60,0],[81,2,61,0],[82,0,62,0],[83,0,63,0],[84,0,64,0],[85,2,65,0],[85,11,65,9,"openFileBrowserAsync"],[85,31,65,29,"openFileBrowserAsync"],[85,32,65,30],[86,4,65,32,"mediaTypes"],[86,14,65,42],[87,4,65,44,"capture"],[87,11,65,51],[87,14,65,54],[87,19,65,59],[88,4,65,61,"allowsMultipleSelection"],[88,27,65,84],[88,30,65,87],[88,35,65,92],[89,4,65,94,"base64"],[90,2,65,102],[90,3,65,103],[90,5,65,105],[91,4,66,4],[91,10,66,10,"parsedMediaTypes"],[91,26,66,26],[91,29,66,29],[91,33,66,29,"parseMediaTypes"],[91,55,66,44],[91,57,66,45,"mediaTypes"],[91,67,66,55],[91,68,66,56],[92,4,67,4],[92,10,67,10,"mediaTypeFormat"],[92,25,67,25],[92,28,67,28,"createMediaTypeFormat"],[92,49,67,49],[92,50,67,50,"parsedMediaTypes"],[92,66,67,66],[92,67,67,67],[93,4,68,4],[93,10,68,10,"input"],[93,15,68,15],[93,18,68,18,"document"],[93,26,68,26],[93,27,68,27,"createElement"],[93,40,68,40],[93,41,68,41],[93,48,68,48],[93,49,68,49],[94,4,69,4,"input"],[94,9,69,9],[94,10,69,10,"style"],[94,15,69,15],[94,16,69,16,"display"],[94,23,69,23],[94,26,69,26],[94,32,69,32],[95,4,70,4,"input"],[95,9,70,9],[95,10,70,10,"setAttribute"],[95,22,70,22],[95,23,70,23],[95,29,70,29],[95,31,70,31],[95,37,70,37],[95,38,70,38],[96,4,71,4,"input"],[96,9,71,9],[96,10,71,10,"setAttribute"],[96,22,71,22],[96,23,71,23],[96,31,71,31],[96,33,71,33,"mediaTypeFormat"],[96,48,71,48],[96,49,71,49],[97,4,72,4,"input"],[97,9,72,9],[97,10,72,10,"setAttribute"],[97,22,72,22],[97,23,72,23],[97,27,72,27],[97,29,72,29,"String"],[97,35,72,35],[97,36,72,36,"Math"],[97,40,72,40],[97,41,72,41,"random"],[97,47,72,47],[97,48,72,48],[97,49,72,49],[97,50,72,50],[97,51,72,51],[98,4,73,4,"input"],[98,9,73,9],[98,10,73,10,"setAttribute"],[98,22,73,22],[98,23,73,23],[98,36,73,36],[98,38,73,38],[98,50,73,50],[98,51,73,51],[99,4,74,4],[99,8,74,8,"allowsMultipleSelection"],[99,31,74,31],[99,33,74,33],[100,6,75,8,"input"],[100,11,75,13],[100,12,75,14,"setAttribute"],[100,24,75,26],[100,25,75,27],[100,35,75,37],[100,37,75,39],[100,47,75,49],[100,48,75,50],[101,4,76,4],[102,4,77,4],[102,8,77,8,"capture"],[102,15,77,15],[102,17,77,17],[103,6,78,8],[103,14,78,16,"capture"],[103,21,78,23],[104,8,79,12],[104,13,79,17],[104,17,79,21],[105,10,80,16,"input"],[105,15,80,21],[105,16,80,22,"setAttribute"],[105,28,80,34],[105,29,80,35],[105,38,80,44],[105,40,80,46],[105,48,80,54],[105,49,80,55],[106,10,81,16],[107,8,82,12],[107,13,82,17,"CameraType"],[107,36,82,27],[107,37,82,28,"front"],[107,42,82,33],[108,10,83,16,"input"],[108,15,83,21],[108,16,83,22,"setAttribute"],[108,28,83,34],[108,29,83,35],[108,38,83,44],[108,40,83,46],[108,46,83,52],[108,47,83,53],[109,10,84,16],[110,8,85,12],[110,13,85,17,"CameraType"],[110,36,85,27],[110,37,85,28,"back"],[110,41,85,32],[111,10,86,16,"input"],[111,15,86,21],[111,16,86,22,"setAttribute"],[111,28,86,34],[111,29,86,35],[111,38,86,44],[111,40,86,46],[111,53,86,59],[111,54,86,60],[112,6,87,8],[113,4,88,4],[114,4,89,4,"document"],[114,12,89,12],[114,13,89,13,"body"],[114,17,89,17],[114,18,89,18,"appendChild"],[114,29,89,29],[114,30,89,30,"input"],[114,35,89,35],[114,36,89,36],[115,4,90,4],[115,11,90,11],[115,15,90,15,"Promise"],[115,22,90,22],[115,23,90,24,"resolve"],[115,30,90,31],[115,34,90,36],[116,6,91,8,"input"],[116,11,91,13],[116,12,91,14,"addEventListener"],[116,28,91,30],[116,29,91,31],[116,37,91,39],[116,39,91,41],[116,51,91,53],[117,8,92,12],[117,12,92,16,"input"],[117,17,92,21],[117,18,92,22,"files"],[117,23,92,27],[117,25,92,29,"length"],[117,31,92,35],[117,33,92,37],[118,10,93,16],[118,16,93,22,"files"],[118,21,93,27],[118,24,93,30,"allowsMultipleSelection"],[118,47,93,53],[118,50,93,56,"input"],[118,55,93,61],[118,56,93,62,"files"],[118,61,93,67],[118,64,93,70],[118,65,93,71,"input"],[118,70,93,76],[118,71,93,77,"files"],[118,76,93,82],[118,77,93,83],[118,78,93,84],[118,79,93,85],[118,80,93,86],[119,10,94,16],[119,16,94,22,"assets"],[119,22,94,28],[119,25,94,31],[119,31,94,37,"Promise"],[119,38,94,44],[119,39,94,45,"all"],[119,42,94,48],[119,43,94,49,"Array"],[119,48,94,54],[119,49,94,55,"from"],[119,53,94,59],[119,54,94,60,"files"],[119,59,94,65],[119,60,94,66],[119,61,94,67,"map"],[119,64,94,70],[119,65,94,72,"file"],[119,69,94,76],[119,73,94,81,"readFile"],[119,81,94,89],[119,82,94,90,"file"],[119,86,94,94],[119,88,94,96],[120,12,94,98,"base64"],[121,10,94,105],[121,11,94,106],[121,12,94,107],[121,13,94,108],[121,14,94,109],[122,10,95,16,"resolve"],[122,17,95,23],[122,18,95,24],[123,12,95,26,"canceled"],[123,20,95,34],[123,22,95,36],[123,27,95,41],[124,12,95,43,"assets"],[125,10,95,50],[125,11,95,51],[125,12,95,52],[126,8,96,12],[126,9,96,13],[126,15,97,17],[127,10,98,16,"resolve"],[127,17,98,23],[127,18,98,24],[128,12,98,26,"canceled"],[128,20,98,34],[128,22,98,36],[128,26,98,40],[129,12,98,42,"assets"],[129,18,98,48],[129,20,98,50],[130,10,98,55],[130,11,98,56],[130,12,98,57],[131,8,99,12],[132,8,100,12,"document"],[132,16,100,20],[132,17,100,21,"body"],[132,21,100,25],[132,22,100,26,"removeChild"],[132,33,100,37],[132,34,100,38,"input"],[132,39,100,43],[132,40,100,44],[133,6,101,8],[133,7,101,9],[133,8,101,10],[134,6,102,8,"input"],[134,11,102,13],[134,12,102,14,"addEventListener"],[134,28,102,30],[134,29,102,31],[134,37,102,39],[134,39,102,41],[134,45,102,47],[135,8,103,12,"input"],[135,13,103,17],[135,14,103,18,"dispatchEvent"],[135,27,103,31],[135,28,103,32],[135,32,103,36,"Event"],[135,37,103,41],[135,38,103,42],[135,46,103,50],[135,47,103,51],[135,48,103,52],[136,6,104,8],[136,7,104,9],[136,8,104,10],[137,6,105,8],[137,12,105,14,"event"],[137,17,105,19],[137,20,105,22],[137,24,105,26,"MouseEvent"],[137,34,105,36],[137,35,105,37],[137,42,105,44],[137,43,105,45],[138,6,106,8,"input"],[138,11,106,13],[138,12,106,14,"dispatchEvent"],[138,25,106,27],[138,26,106,28,"event"],[138,31,106,33],[138,32,106,34],[139,4,107,4],[139,5,107,5],[139,6,107,6],[140,2,108,0],[141,2,109,0],[142,0,110,0],[143,0,111,0],[144,0,112,0],[145,2,113,0],[145,17,113,15,"getImageMetadata"],[145,33,113,31,"getImageMetadata"],[145,34,113,32,"blobUrl"],[145,41,113,39],[145,43,113,41],[146,4,114,4],[146,11,114,11],[146,15,114,15,"Promise"],[146,22,114,22],[146,23,114,24,"resolve"],[146,30,114,31],[146,34,114,36],[147,6,115,8],[147,12,115,14,"image"],[147,17,115,19],[147,20,115,22],[147,24,115,26,"Image"],[147,29,115,31],[147,30,115,32],[147,31,115,33],[148,6,116,8,"image"],[148,11,116,13],[148,12,116,14,"onload"],[148,18,116,20],[148,21,116,23],[148,27,116,29],[149,8,117,12,"resolve"],[149,15,117,19],[149,16,117,20],[150,10,118,16,"width"],[150,15,118,21],[150,17,118,23,"image"],[150,22,118,28],[150,23,118,29,"naturalWidth"],[150,35,118,41],[150,39,118,45,"image"],[150,44,118,50],[150,45,118,51,"width"],[150,50,118,56],[151,10,119,16,"height"],[151,16,119,22],[151,18,119,24,"image"],[151,23,119,29],[151,24,119,30,"naturalHeight"],[151,37,119,43],[151,41,119,47,"image"],[151,46,119,52],[151,47,119,53,"height"],[152,8,120,12],[152,9,120,13],[152,10,120,14],[153,6,121,8],[153,7,121,9],[154,6,122,8,"image"],[154,11,122,13],[154,12,122,14,"onerror"],[154,19,122,21],[154,22,122,24],[154,28,122,30,"resolve"],[154,35,122,37],[154,36,122,38],[155,8,122,40,"width"],[155,13,122,45],[155,15,122,47],[155,16,122,48],[156,8,122,50,"height"],[156,14,122,56],[156,16,122,58],[157,6,122,60],[157,7,122,61],[157,8,122,62],[158,6,123,8,"image"],[158,11,123,13],[158,12,123,14,"src"],[158,15,123,17],[158,18,123,20,"blobUrl"],[158,25,123,27],[159,4,124,4],[159,5,124,5],[159,6,124,6],[160,2,125,0],[161,2,126,0],[162,0,127,0],[163,0,128,0],[164,2,129,0],[164,17,129,15,"getVideoMetadata"],[164,33,129,31,"getVideoMetadata"],[164,34,129,32,"blobUrl"],[164,41,129,39],[164,43,129,41],[165,4,130,4],[165,11,130,11],[165,15,130,15,"Promise"],[165,22,130,22],[165,23,130,24,"resolve"],[165,30,130,31],[165,34,130,36],[166,6,131,8],[166,12,131,14,"video"],[166,17,131,19],[166,20,131,22,"document"],[166,28,131,30],[166,29,131,31,"createElement"],[166,42,131,44],[166,43,131,45],[166,50,131,52],[166,51,131,53],[167,6,132,8,"video"],[167,11,132,13],[167,12,132,14,"preload"],[167,19,132,21],[167,22,132,24],[167,32,132,34],[168,6,133,8,"video"],[168,11,133,13],[168,12,133,14,"onloadedmetadata"],[168,28,133,30],[168,31,133,33],[168,37,133,39],[169,8,134,12,"resolve"],[169,15,134,19],[169,16,134,20],[170,10,135,16,"width"],[170,15,135,21],[170,17,135,23,"video"],[170,22,135,28],[170,23,135,29,"videoWidth"],[170,33,135,39],[171,10,136,16,"height"],[171,16,136,22],[171,18,136,24,"video"],[171,23,136,29],[171,24,136,30,"videoHeight"],[171,35,136,41],[172,10,137,16,"duration"],[172,18,137,24],[172,20,137,26,"video"],[172,25,137,31],[172,26,137,32,"duration"],[173,8,138,12],[173,9,138,13],[173,10,138,14],[174,6,139,8],[174,7,139,9],[175,6,140,8,"video"],[175,11,140,13],[175,12,140,14,"onerror"],[175,19,140,21],[175,22,140,24],[175,28,140,30,"resolve"],[175,35,140,37],[175,36,140,38],[176,8,140,40,"width"],[176,13,140,45],[176,15,140,47],[176,16,140,48],[177,8,140,50,"height"],[177,14,140,56],[177,16,140,58],[177,17,140,59],[178,8,140,61,"duration"],[178,16,140,69],[178,18,140,71],[179,6,140,73],[179,7,140,74],[179,8,140,75],[180,6,141,8,"video"],[180,11,141,13],[180,12,141,14,"src"],[180,15,141,17],[180,18,141,20,"blobUrl"],[180,25,141,27],[181,4,142,4],[181,5,142,5],[181,6,142,6],[182,2,143,0],[183,2,144,0],[184,0,145,0],[185,0,146,0],[186,2,147,0],[186,17,147,15,"readFileAsBase64"],[186,33,147,31,"readFileAsBase64"],[186,34,147,32,"file"],[186,38,147,36],[186,40,147,38],[187,4,148,4],[187,11,148,11],[187,15,148,15,"Promise"],[187,22,148,22],[187,23,148,23],[187,24,148,24,"resolve"],[187,31,148,31],[187,33,148,33,"reject"],[187,39,148,39],[187,44,148,44],[188,6,149,8],[188,12,149,14,"reader"],[188,18,149,20],[188,21,149,23],[188,25,149,27,"FileReader"],[188,35,149,37],[188,36,149,38],[188,37,149,39],[189,6,150,8,"reader"],[189,12,150,14],[189,13,150,15,"onerror"],[189,20,150,22],[189,23,150,25],[189,29,150,31],[190,8,151,12,"reject"],[190,14,151,18],[190,15,151,19],[190,19,151,23,"Error"],[190,24,151,28],[190,25,151,29],[190,90,151,94],[190,91,151,95],[190,92,151,96],[191,6,152,8],[191,7,152,9],[192,6,153,8,"reader"],[192,12,153,14],[192,13,153,15,"onload"],[192,19,153,21],[192,22,153,25,"event"],[192,27,153,30],[192,31,153,35],[193,8,154,12],[193,14,154,18,"result"],[193,20,154,24],[193,23,154,27,"event"],[193,28,154,32],[193,29,154,33,"target"],[193,35,154,39],[193,37,154,41,"result"],[193,43,154,47],[194,8,155,12],[194,12,155,16],[194,19,155,23,"result"],[194,25,155,29],[194,30,155,34],[194,38,155,42],[194,40,155,44],[195,10,156,16,"reject"],[195,16,156,22],[195,17,156,23],[195,21,156,27,"Error"],[195,26,156,32],[195,27,156,33],[195,58,156,64],[195,59,156,65],[195,60,156,66],[196,10,157,16],[197,8,158,12],[198,8,159,12],[199,8,160,12,"resolve"],[199,15,160,19],[199,16,160,20,"result"],[199,22,160,26],[199,23,160,27,"split"],[199,28,160,32],[199,29,160,33],[199,32,160,36],[199,33,160,37],[199,34,160,38],[199,35,160,39],[199,36,160,40],[199,37,160,41],[200,6,161,8],[200,7,161,9],[201,6,162,8,"reader"],[201,12,162,14],[201,13,162,15,"readAsDataURL"],[201,26,162,28],[201,27,162,29,"file"],[201,31,162,33],[201,32,162,34],[202,4,163,4],[202,5,163,5],[202,6,163,6],[203,2,164,0],[204,2,165,0],[205,0,166,0],[206,0,167,0],[207,0,168,0],[208,2,169,0],[208,17,169,15,"readFile"],[208,25,169,23,"readFile"],[208,26,169,24,"targetFile"],[208,36,169,34],[208,38,169,36,"options"],[208,45,169,43],[208,47,169,45],[209,4,170,4],[209,10,170,10,"mimeType"],[209,18,170,18],[209,21,170,21,"targetFile"],[209,31,170,31],[209,32,170,32,"type"],[209,36,170,36],[210,4,171,4],[210,10,171,10,"baseUri"],[210,17,171,17],[210,20,171,20,"URL"],[210,23,171,23],[210,24,171,24,"createObjectURL"],[210,39,171,39],[210,40,171,40,"targetFile"],[210,50,171,50],[210,51,171,51],[211,4,172,4],[211,8,172,8],[212,6,173,8],[212,10,173,12,"metadata"],[212,18,173,20],[213,6,174,8],[213,10,174,12,"base64"],[213,16,174,18],[214,6,175,8],[214,10,175,12,"mimeType"],[214,18,175,20],[214,19,175,21,"startsWith"],[214,29,175,31],[214,30,175,32],[214,38,175,40],[214,39,175,41],[214,41,175,43],[215,8,176,12,"metadata"],[215,16,176,20],[215,19,176,23],[215,25,176,29,"getImageMetadata"],[215,41,176,45],[215,42,176,46,"baseUri"],[215,49,176,53],[215,50,176,54],[216,6,177,8],[216,7,177,9],[216,13,178,13],[216,17,178,17,"mimeType"],[216,25,178,25],[216,26,178,26,"startsWith"],[216,36,178,36],[216,37,178,37],[216,45,178,45],[216,46,178,46],[216,48,178,48],[217,8,179,12,"metadata"],[217,16,179,20],[217,19,179,23],[217,25,179,29,"getVideoMetadata"],[217,41,179,45],[217,42,179,46,"baseUri"],[217,49,179,53],[217,50,179,54],[218,6,180,8],[218,7,180,9],[218,13,181,13],[219,8,182,12],[219,14,182,18],[219,18,182,22,"Error"],[219,23,182,27],[219,24,182,28],[219,50,182,54,"mimeType"],[219,58,182,62],[219,99,182,103],[219,100,182,104],[220,6,183,8],[221,6,184,8],[221,10,184,12,"options"],[221,17,184,19],[221,18,184,20,"base64"],[221,24,184,26],[221,26,184,28],[222,8,185,12,"base64"],[222,14,185,18],[222,17,185,21],[222,23,185,27,"readFileAsBase64"],[222,39,185,43],[222,40,185,44,"targetFile"],[222,50,185,54],[222,51,185,55],[223,6,186,8],[224,6,187,8],[224,13,187,15],[225,8,188,12,"uri"],[225,11,188,15],[225,13,188,17,"baseUri"],[225,20,188,24],[226,8,189,12,"width"],[226,13,189,17],[226,15,189,19,"metadata"],[226,23,189,27],[226,24,189,28,"width"],[226,29,189,33],[227,8,190,12,"height"],[227,14,190,18],[227,16,190,20,"metadata"],[227,24,190,28],[227,25,190,29,"height"],[227,31,190,35],[228,8,191,12,"type"],[228,12,191,16],[228,14,191,18,"mimeType"],[228,22,191,26],[228,23,191,27,"startsWith"],[228,33,191,37],[228,34,191,38],[228,42,191,46],[228,43,191,47],[228,46,191,50],[228,53,191,57],[228,56,191,60],[228,63,191,67],[229,8,192,12,"mimeType"],[229,16,192,20],[230,8,193,12,"fileName"],[230,16,193,20],[230,18,193,22,"targetFile"],[230,28,193,32],[230,29,193,33,"name"],[230,33,193,37],[231,8,194,12,"fileSize"],[231,16,194,20],[231,18,194,22,"targetFile"],[231,28,194,32],[231,29,194,33,"size"],[231,33,194,37],[232,8,195,12,"file"],[232,12,195,16],[232,14,195,18,"targetFile"],[232,24,195,28],[233,8,196,12],[233,12,196,16,"metadata"],[233,20,196,24],[233,21,196,25,"duration"],[233,29,196,33],[233,34,196,38,"undefined"],[233,43,196,47],[233,47,196,51],[234,10,196,53,"duration"],[234,18,196,61],[234,20,196,63,"metadata"],[234,28,196,71],[234,29,196,72,"duration"],[235,8,196,81],[235,9,196,82],[235,10,196,83],[236,8,197,12],[236,12,197,16,"base64"],[236,18,197,22],[236,22,197,26],[237,10,197,28,"base64"],[238,8,197,35],[238,9,197,36],[239,6,198,8],[239,7,198,9],[240,4,199,4],[240,5,199,5],[240,6,200,4],[240,13,200,11,"error"],[240,18,200,16],[240,20,200,18],[241,6,201,8],[241,12,201,14,"error"],[241,17,201,19],[242,4,202,4],[243,2,203,0],[244,2,204,0],[245,0,205,0],[246,0,206,0],[247,0,207,0],[248,2,208,0],[248,11,208,9,"createMediaTypeFormat"],[248,32,208,30,"createMediaTypeFormat"],[248,33,208,31,"mediaTypes"],[248,43,208,41],[248,45,208,43],[249,4,209,4],[249,10,209,10,"filteredMediaTypes"],[249,28,209,28],[249,31,209,31,"mediaTypes"],[249,41,209,41],[249,42,209,42,"filter"],[249,48,209,48],[249,49,209,50,"mediaType"],[249,58,209,59],[249,62,209,64,"mediaType"],[249,71,209,73],[249,76,209,78],[249,88,209,90],[249,89,209,91],[250,4,210,4],[250,8,210,8,"filteredMediaTypes"],[250,26,210,26],[250,27,210,27,"length"],[250,33,210,33],[250,38,210,38],[250,39,210,39],[250,41,210,41],[251,6,211,8],[251,13,211,15],[251,22,211,24],[252,4,212,4],[253,4,213,4],[253,8,213,8,"result"],[253,14,213,14],[253,17,213,17],[253,19,213,19],[254,4,214,4],[254,9,214,9],[254,15,214,15,"mediaType"],[254,24,214,24],[254,28,214,28,"filteredMediaTypes"],[254,46,214,46],[254,48,214,48],[255,6,215,8],[256,6,216,8],[256,10,216,12],[256,11,216,13,"result"],[256,17,216,19],[256,18,216,20,"includes"],[256,26,216,28],[256,27,216,29,"MediaTypeInput"],[256,41,216,43],[256,42,216,44,"mediaType"],[256,51,216,53],[256,52,216,54],[256,53,216,55],[256,55,216,57],[257,8,217,12,"result"],[257,14,217,18],[257,17,217,21,"result"],[257,23,217,27],[257,24,217,28,"concat"],[257,30,217,34],[257,31,217,35],[257,34,217,38],[257,36,217,40,"MediaTypeInput"],[257,50,217,54],[257,51,217,55,"mediaType"],[257,60,217,64],[257,61,217,65],[257,62,217,66],[258,6,218,8],[259,4,219,4],[260,4,220,4],[260,11,220,11,"result"],[260,17,220,17],[261,2,221,0],[262,0,221,1],[262,3]],"functionMap":{"names":["<global>","default.launchImageLibraryAsync","default.launchCameraAsync","default.getCameraPermissionsAsync","default.requestCameraPermissionsAsync","default.getMediaLibraryPermissionsAsync","default.requestMediaLibraryPermissionsAsync","permissionGrantedResponse","openFileBrowserAsync","Promise$argument_0","input.addEventListener$argument_1","Array.from.map$argument_0","getImageMetadata","image.onload","image.onerror","getVideoMetadata","video.onloadedmetadata","video.onerror","readFileAsBase64","reader.onerror","reader.onload","readFile","createMediaTypeFormat","mediaTypes.filter$argument_0"],"mappings":"AAA;ICS;KDU;IEC;KFW;IGI;KHE;IIC;KJE;IKK;KLE;IMC;KNE;AOE;CPO;AQK;uBCyB;yCCC;uECG,oCD;SDO;yCCC;SDE;KDG;CRC;AYK;uBHC;uBIE;SJK;wBKC,sCL;KGE;CZC;AeI;uBNC;iCOG;SPM;wBQC,mDR;KME;CfC;AkBI;uBTC;yBUE;SVE;wBWC;SXQ;KSE;ClBC;AqBK;CrBkC;AsBK;iDCC,yCD;CtBY"}},"type":"js/module"}]}