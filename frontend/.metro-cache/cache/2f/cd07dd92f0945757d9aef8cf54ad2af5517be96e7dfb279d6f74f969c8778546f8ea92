{"dependencies":[{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"./polyfill","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":88},"end":{"line":4,"column":20,"index":108}}],"key":"SgB75yahL0ckEJWzwk3zAkoI2q4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.ensureNativeModulesAreInstalled = ensureNativeModulesAreInstalled;\n  var _reactNativeWebDistIndex = require(_dependencyMap[0], \"react-native-web/dist/index\");\n  require(_dependencyMap[1], \"./polyfill\");\n  // Installs the expo global on web\n\n  /**\n   * Ensures that the native modules are installed in the current runtime.\n   * Otherwise, it synchronously calls a native function that installs them.\n   */\n  function ensureNativeModulesAreInstalled() {\n    if (globalThis.expo) {\n      return;\n    }\n    try {\n      if (false) {\n        // TODO: ExpoModulesCore shouldn't be optional here,\n        // but to keep backwards compatibility let's just ignore it in SDK 50.\n        // In most cases the modules were already installed from the native side.\n        _reactNativeWebDistIndex.TurboModuleRegistry.get('ExpoModulesCore')?.installModules();\n      }\n    } catch (error) {\n      console.error(`Unable to install Expo modules: ${error}`);\n    }\n  }\n});","lineCount":31,"map":[[7,2,10,0,"exports"],[7,9,10,0],[7,10,10,0,"ensureNativeModulesAreInstalled"],[7,41,10,0],[7,44,10,0,"ensureNativeModulesAreInstalled"],[7,75,10,0],[8,2,26,1],[8,6,26,1,"_reactNativeWebDistIndex"],[8,30,26,1],[8,33,26,1,"require"],[8,40,26,1],[8,41,26,1,"_dependencyMap"],[8,55,26,1],[9,2,4,0,"require"],[9,9,4,0],[9,10,4,0,"_dependencyMap"],[9,24,4,0],[10,2,3,0],[12,2,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,2,10,7],[16,11,10,16,"ensureNativeModulesAreInstalled"],[16,42,10,47,"ensureNativeModulesAreInstalled"],[16,43,10,47],[16,45,10,56],[17,4,11,2],[17,8,11,6,"globalThis"],[17,18,11,16],[17,19,11,17,"expo"],[17,23,11,21],[17,25,11,23],[18,6,12,4],[19,4,13,2],[20,4,14,2],[20,8,14,6],[21,6,15,4],[21,17,15,39],[22,8,16,6],[23,8,17,6],[24,8,18,6],[25,8,20,8,"TurboModuleRegistry"],[25,32,20,27],[25,33,20,27,"TurboModuleRegistry"],[25,52,20,27],[25,53,20,28,"get"],[25,56,20,31],[25,57,20,32],[25,74,20,49],[25,75,20,50],[25,77,21,9,"installModules"],[25,91,21,23],[25,92,21,24],[25,93,21,25],[26,6,22,4],[27,4,23,2],[27,5,23,3],[27,6,23,4],[27,13,23,11,"error"],[27,18,23,16],[27,20,23,18],[28,6,24,4,"console"],[28,13,24,11],[28,14,24,12,"error"],[28,19,24,17],[28,20,24,18],[28,55,24,53,"error"],[28,60,24,58],[28,62,24,60],[28,63,24,61],[29,4,25,2],[30,2,26,0],[31,0,26,1],[31,3]],"functionMap":{"names":["<global>","ensureNativeModulesAreInstalled"],"mappings":"AAA;OCS;CDgB"},"hasCjsExports":false},"type":"js/module"}]}